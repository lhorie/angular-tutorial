[
"<h1>Angular.js tutorial</h1>",
"<h1>What's Angular.js?</h1>",
"<h1>What's Angular.js?</h1>\n\n<ul>\n\t<li>It's a javascript-based MVC framework</li>\n</ul>",
"<h1>What's Angular.js?</h1>\n\n<ul>\n\t<li>It's a javascript-based MVC framework</li>\n\t<li>It's maintained by Google</li>\n</ul>",
"<h1>What's Angular.js?</h1>\n\n<ul>\n\t<li>It's a javascript-based MVC framework</li>\n\t<li>It's maintained by Google</li>\n\t<li>It's designed to make code well organized and testable</li>\n</ul>",
"<h1>Why should I use Angular.js (instead of jQuery, Knockout.js, Razor, etc)?</h1>",
"<h1>Why should I use Angular.js (instead of jQuery, Knockout.js, Razor, etc)?</h1>\n\n<h2>Short answer: better control over the lifecycle of a page</h2>",
"<h1>Why should I use Angular.js (instead of jQuery, Knockout.js, Razor, etc)?</h1>\n\n<h2>Short answer: better control over the lifecycle of a page</h2>\n\n<h3>Long answer:</h3>\n\n<ul>\n\t<li>Idiomatic Angular.js code is organized and discoverable</li>\n</ul>",
"<h1>Why should I use Angular.js (instead of jQuery, Knockout.js, Razor, etc)?</h1>\n\n<h2>Short answer: better control over the lifecycle of a page</h2>\n\n<h3>Long answer:</h3>\n\n<ul>\n\t<li>Idiomatic Angular.js code is organized and discoverable</li>\n\t<li>Does a lot of useful things out of the box, e.g. data formatting, routing, form pre-validation, pluralization, unit/e2e testing and so on</li>\n</ul>",
"<h1>Why should I use Angular.js (instead of jQuery, Knockout.js, Razor, etc)?</h1>\n\n<h2>Short answer: better control over the lifecycle of a page</h2>\n\n<h3>Long answer:</h3>\n\n<ul>\n\t<li>Idiomatic Angular.js code is organized and discoverable</li>\n\t<li>Does a lot of useful things out of the box, e.g. data formatting, routing, form pre-validation, pluralization, unit/e2e testing and so on</li>\n\t<li>Easier to reason about highly dynamic UI's (i.e. user interfaces with lots of possible post-page-load states)</li>\n</ul>",
"<h1>Why should I use Angular.js (instead of jQuery, Knockout.js, Razor, etc)?</h1>\n\n<h2>Short answer: better control over the lifecycle of a page</h2>\n\n<h3>Long answer:</h3>\n\n<ul>\n\t<li>Idiomatic Angular.js code is organized and discoverable</li>\n\t<li>Does a lot of useful things out of the box, e.g. data formatting, routing, form pre-validation, pluralization, unit/e2e testing and so on</li>\n\t<li>Easier to reason about highly dynamic UI's (i.e. user interfaces with lots of possible post-page-load states)</li>\n\t<li>Easier to refactor (e.g. I recently added a HTTP request aggregation feature that improves performance for all the Angular apps in our intranet. It took ~5 lines of code.)</li>\n</ul>",
"<h1>When is Angular.js not a good fit?</h1>",
"<h1>When is Angular.js not a good fit?</h1>\n\n<ul>\n\t<li>It has a very strong focus on architecture and DRY, so it's not a good fit for cowboy-style development</li>\n</ul>",
"<h1>When is Angular.js not a good fit?</h1>\n\n<ul>\n\t<li>It has a very strong focus on architecture and DRY, so it's not a good fit for cowboy-style development</li>\n\t<li>It's a completely different mindset from jQuery, and trying to use Angular as jQuery (i.e. interweaving business logic w/ DOM manipulation code) will not yield optimal results</li>\n</ul>",
"<h1>When is Angular.js not a good fit?</h1>\n\n<ul>\n\t<li>It has a very strong focus on architecture and DRY, so it's not a good fit for cowboy-style development</li>\n\t<li>It's a completely different mindset from jQuery, and trying to use Angular as jQuery (i.e. interweaving business logic w/ DOM manipulation code) will not yield optimal results</li>\n\t<li>You won't need that many Angular features in simpler sites (to be fair, the same argument can be made about jQuery...)</li>\n</ul>",
"<h1>Ok, let's build an app!</h1>",
"<h1>This app.</h1>",
"<h1>Quick overview:</h1>\n\n<ul>\n\t<li>We can create tutorials</li>\n\t<li>We can create steps in tutorials</li>\n\t<li>We can step through tutorials</li>\n\t<li>Each step is a piece of code (shown in the code editor on the left),\n\t<br />\n\twhich runs in real time (shown in the iframe on the right)</li>\n</ul>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<p>form goes here</p>\n\t\t\t\t\t\t<p>table goes here</p>\n\t\t\t\t\t\t<p>editor goes here</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<p>iframe goes here</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<p>table goes here</p>\n\t\t\t\t\t\t<p>editor goes here</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<p>iframe goes here</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=''>name</a></td>\n\t\t\t\t\t\t\t\t<td>date</td>\n\t\t\t\t\t\t\t\t<td>num steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<p>editor goes here</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<p>iframe goes here</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=''>name</a></td>\n\t\t\t\t\t\t\t\t<td>date</td>\n\t\t\t\t\t\t\t\t<td>num steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<p>iframe goes here</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=''>name</a></td>\n\t\t\t\t\t\t\t\t<td>date</td>\n\t\t\t\t\t\t\t\t<td>num steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=''>name</a></td>\n\t\t\t\t\t\t\t\t<td>date</td>\n\t\t\t\t\t\t\t\t<td>num steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>",
"<h3>Let's start adding functionality</h3>",
"<h3>Let's start adding functionality</h3>\n\n<p>We'll need Angular.js</p>\n\n<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>",
"<h3>Let's start adding functionality</h3>\n\n<p>We'll need Angular.js</p>\n\n<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\n<p>We'll also convert that textarea into a code editor, so we'll also add Angular UI and CodeMirror</p>\n\n<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>",
"<h3>Let's start adding functionality</h3>\n\n<p>We'll need Angular.js</p>\n\n<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\n<p>We'll also convert that textarea into a code editor, so we'll also add Angular UI and CodeMirror</p>\n\n<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\n<p>I also want to show you how to do Unit Testing, so we'll add Jasmine and Angular Mocks</p>\n\n<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=''>name</a></td>\n\t\t\t\t\t\t\t\t<td>date</td>\n\t\t\t\t\t\t\t\t<td>num steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t</body>\n</html>",
"<h3>Before we continue, let's go over a few Angular concepts</h3>",
"<h3>Angular modules</h3>\n\n<p>They're kinda like namespaces</p>\n\n<pre>\nangular.module('tutorial', ['ui-directives'])\n</pre>\n\n<p>This is a module called 'tutorial', which requires the 'ui-directives' module for the CodeMirror functionality.</p>",
"<h3>Angular bootstrapping</h3>\n\n<p>Bootstrapping is how we attach the Angular module to our page</p>\n\n<pre>\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n</pre>\n\n<p>This attaches the 'tutorial' module to the DOM element with ID = 'tutorial' on load of the page</p>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=''>name</a></td>\n\t\t\t\t\t\t\t\t<td>date</td>\n\t\t\t\t\t\t\t\t<td>num steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t</body>\n</html>",
"<h3>Ok, great! We're ready to start!</h3>",
"<h3>Ok, great! We're ready to start!</h3>\n\n<h3>Time to unit test!</h3>",
"<h3>Ok, great! We're ready to start!</h3>\n\n<h3>Time to unit test!</h3>\n\n<p>No, really. We're gonna write tests <em>now</em>.</p>",
"<h3>Jasmine in a nutshell</h3>\n\n<p><code>describe()</code> groups tests into a suite.</p>\n\n<p><code>it()</code> runs a unit test.</p>",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\t\t//tests go here\n\t})\n})\n</script>\n\n",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\t\n\t\t}))\n\n\t})\n})\n</script>\n\n",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\n\t\t}))\n\n\t})\n})\n</script>\n\n",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\n\t\t\ttutorial.nextStep()\n\t\t}))\n\n\t})\n})\n</script>\n\n",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t}))\n\n\t})\n})\n</script>\n\n",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\n\t\t\ttutorial.nextStep()\n\t\t}))\n\n\t})\n})\n</script>\n\n",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t}))\n\n\t})\n})\n</script>\n\n",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t}))\n\n\t})\n})\n</script>\n\n",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\n\t})\n})\n</script>\n\n",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\n\t})\n})\n</script>\n\n",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\t\n\t\t}))\n\t\t\n\t})\n})\n</script>\n\n",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t\t\n\t})\n})\n</script>\n\n",
"<h3>We're gonna write tests to help us design a Tutorial class</h3>\n\n<script type='demo'>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\t\n\tdescribe('tutorial class', function() {\n\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t\t\n\t})\n})\n</script>\n\n<p>Let's run these tests</p>\n\n<p>Here's some Jasmine boilerplate to show a report on the console</p>\n\n<pre>\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n</pre>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=''>name</a></td>\n\t\t\t\t\t\t\t\t<td>date</td>\n\t\t\t\t\t\t\t\t<td>num steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t\t<script>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\n\tdescribe('tutorial class', function() {\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\t\t\t\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t})\n})\n\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n\n\t\t</script>\n\t</body>\n</html>",
"<h3>Crap. The test barfed.</h3>",
"<h3>Crap. The test barfed.</h3>\n\n<p>Maybe it'll work if we write the class we're testing.</p>\n\n<img src='http://cdn.mhpbooks.com/uploads/2012/07/homer-doh.jpg' />",
"<h3>In Angular, we create classes via 'factory()', in a module</h3>\n\n<script type='demo'>\nangular.module('tutorial').factory('Tutorial', function() {\n\n})\n</script>",
"<h3>In Angular, we create classes via 'factory()', in a module</h3>\n\n<p>Here's an implementation.</p>\n\n<script type='demo'>\nangular.module('tutorial').factory('Tutorial', function() {\n\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep--\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep++\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n\n})\n</script>",
"<h3>In Angular, we create classes via 'factory()', in a module</h3>\n\n<p>Here's an implementation.</p>\n\n<script type='demo'>\nangular.module('tutorial').factory('Tutorial', function() {\n\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep--\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep++\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n\n})\n</script>\n\n<p>Let's test this.</p>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=''>name</a></td>\n\t\t\t\t\t\t\t\t<td>date</td>\n\t\t\t\t\t\t\t\t<td>num steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\n\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep--\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep++\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t\t<script>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\n\tdescribe('tutorial class', function() {\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\t\t\t\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t})\n})\n\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n\n\t\t</script>\n\t</body>\n</html>",
"<h3>Where's the bug?</h3>\n\n<script type='demo'>\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep--\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep++\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n</script>",
"<h3>Where's the bug?</h3>\n\n<script type='demo'>\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep = Math.max(this.currentStep - 1, 0)\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep = Math.min(this.currentStep + 1, this.steps.length - 1)\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n</script>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td><a href=''>name</a></td>\n\t\t\t\t\t\t\t\t<td>date</td>\n\t\t\t\t\t\t\t\t<td>num steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\n\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep = Math.max(this.currentStep - 1, 0)\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep = Math.min(this.currentStep + 1, this.steps.length - 1)\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t\t<script>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\n\tdescribe('tutorial class', function() {\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\t\t\t\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t})\n})\n\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n\n\t\t</script>\n\t</body>\n</html>",
"<h3>Ok, let's create a 'Controller', so we can use our 'Tutorial' class</h3>",
"<h3>Ok, let's create a 'Controller', so we can use our 'Tutorial' class</h3>\n\n<script type='demo'>\n\t\nangular.module('tutorial').controller('TutorialCtrl', function() {\n\t\n})\n\t\n</script>",
"<h3>Ok, let's create a 'Controller', so we can use our 'Tutorial' class</h3>\n\n<script type='demo'>\n\t\nangular.module('tutorial').controller('TutorialCtrl', function(Tutorial) {\n\t\n})\n\t\n</script>\n\n<p>Now we can use the Tutorial class in our controller.</p>\n",
"<h3>Ok, let's create a 'Controller', so we can use our 'Tutorial' class</h3>\n\n<script type='demo'>\n\t\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\t\n})\n\t\n</script>\n\n<p>Now we can use the Tutorial class in our controller.</p>\n\n<p>Angular provides an object to interact with the view layer (called $scope).</p>\n",
"<h3>Ok, let's create a 'Controller', so we can use our 'Tutorial' class</h3>\n\n<script type='demo'>\n\t\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n})\n\t\n</script>\n\n<p>Now we can use the Tutorial class in our controller.</p>\n\n<p>Angular provides an object to interact with the view layer (called $scope).</p>\n\n<p>The controller is where we can connect our business logic (the Tutorial class) to the view layer ($scope)</p>",
"<h4>Now that we have a list of tutorials in the controller, we can use it in the view</h4>\n\n<table class='table table-condensed'>\n\t<tr>\n\t\t<th>Tutorial Name</th>\n\t\t<th>Created</th>\n\t\t<th>Length</th>\n\t</tr>\n\t<tr>\n\t\t<td><a href=''>name</a></td>\n\t\t<td>date</td>\n\t\t<td>num steps</td>\n\t</tr>\n</table>",
"<h4>Now that we have a list of tutorials in the controller, we can use it in the view</h4>\n\n<table class='table table-condensed'>\n\t<tr>\n\t\t<th>Tutorial Name</th>\n\t\t<th>Created</th>\n\t\t<th>Length</th>\n\t</tr>\n\t<tr ng-repeat='tutorial in tutorials'>\n\t\t<td><a href=''>name</a></td>\n\t\t<td>date</td>\n\t\t<td>num steps</td>\n\t</tr>\n</table>",
"<h4>Now that we have a list of tutorials in the controller, we can use it in the view</h4>\n\n<table class='table table-condensed'>\n\t<tr>\n\t\t<th>Tutorial Name</th>\n\t\t<th>Created</th>\n\t\t<th>Length</th>\n\t</tr>\n\t<tr ng-repeat='tutorial in tutorials'>\n\t\t<td><a href=''>{{tutorial.name}}</a></td>\n\t\t<td>date</td>\n\t\t<td>num steps</td>\n\t</tr>\n</table>",
"<h4>Now that we have a list of tutorials in the controller, we can use it in the view</h4>\n\n<table class='table table-condensed'>\n\t<tr>\n\t\t<th>Tutorial Name</th>\n\t\t<th>Created</th>\n\t\t<th>Length</th>\n\t</tr>\n\t<tr ng-repeat='tutorial in tutorials'>\n\t\t<td><a href=''>{{tutorial.name}}</a></td>\n\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t<td>num steps</td>\n\t</tr>\n</table>",
"<h4>Now that we have a list of tutorials in the controller, we can use it in the view</h4>\n\n<table class='table table-condensed'>\n\t<tr>\n\t\t<th>Tutorial Name</th>\n\t\t<th>Created</th>\n\t\t<th>Length</th>\n\t</tr>\n\t<tr ng-repeat='tutorial in tutorials'>\n\t\t<td><a href=''>{{tutorial.name}}</a></td>\n\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t<td>{{tutorial.steps.length}} steps</td>\n\t</tr>\n</table>",
"<h4>Now that we have a list of tutorials in the controller, we can use it in the view</h4>\n\n<table class='table table-condensed'>\n\t<tr>\n\t\t<th>Tutorial Name</th>\n\t\t<th>Created</th>\n\t\t<th>Length</th>\n\t</tr>\n\t<tr ng-repeat='tutorial in tutorials'>\n\t\t<td><a href=''>{{tutorial.name}}</a></td>\n\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t<td>{{tutorial.steps.length}} steps</td>\n\t</tr>\n</table>\n\n<p>We need to also tell the view what controller is connected to it</p>\n\n<div class='form-inline row-fluid'>...</div>",
"<h4>Now that we have a list of tutorials in the controller, we can use it in the view</h4>\n\n<table class='table table-condensed'>\n\t<tr>\n\t\t<th>Tutorial Name</th>\n\t\t<th>Created</th>\n\t\t<th>Length</th>\n\t</tr>\n\t<tr ng-repeat='tutorial in tutorials'>\n\t\t<td><a href=''>{{tutorial.name}}</a></td>\n\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t<td>{{tutorial.steps.length}} steps</td>\n\t</tr>\n</table>\n\n<p>We need to also tell the view what controller is connected to it</p>\n\n<div class='form-inline row-fluid' ng-controller='TutorialCtrl'>...</div>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid' ng-controller='TutorialCtrl'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr ng-repeat='tutorial in tutorials'>\n\t\t\t\t\t\t\t\t<td><a href=''>{{tutorial.name}}</a></td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.steps.length}} steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\n\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep = Math.max(this.currentStep - 1, 0)\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep = Math.min(this.currentStep + 1, this.steps.length - 1)\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n})\n\n\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t\t<script>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\n\tdescribe('tutorial class', function() {\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\t\t\t\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t})\n})\n\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n\n\t\t</script>\n\t</body>\n</html>",
"<h3>The view can also talk back to the controller</h3>\n\n<script type='demo'>\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n})\n\n</script>\n\n<form name='form'>\n\t<div class='control-group'>\n\t\t<input class='input-small' placeholder='Tutorial Name' type='text' />\n\t\t<button class='btn' type='button'>Create tutorial</button>\n\t</div>\n</form>",
"<h3>The view can also talk back to the controller</h3>\n\n<script type='demo'>\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n})\n\n</script>\n\n<form name='form'>\n\t<div class='control-group'>\n\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' type='text' />\n\t\t<button class='btn' type='button'>Create tutorial</button>\n\t</div>\n</form>",
"<h3>The view can also talk back to the controller</h3>\n\n<script type='demo'>\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n})\n\n</script>\n\n<form name='form'>\n\t<div class='control-group'>\n\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' type='text' />\n\t\t<button class='btn' ng-click='createTutorial(name)' type='button'>Create tutorial</button>\n\t</div>\n</form>",
"<h3>The view can also talk back to the controller</h3>\n\n<script type='demo'>\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t\n\t}\n})\n\n</script>\n\n<form name='form'>\n\t<div class='control-group'>\n\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' type='text' />\n\t\t<button class='btn' ng-click='createTutorial(name)' type='button'>Create tutorial</button>\n\t</div>\n</form>",
"<h3>The view can also talk back to the controller</h3>\n\n<script type='demo'>\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t}\n})\n\n</script>\n\n<form name='form'>\n\t<div class='control-group'>\n\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' type='text' />\n\t\t<button class='btn' ng-click='createTutorial(name)' type='button'>Create tutorial</button>\n\t</div>\n</form>",
"<h3>The view can also talk back to the controller</h3>\n\n<script type='demo'>\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n})\n\n</script>\n\n<form name='form'>\n\t<div class='control-group'>\n\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' type='text' />\n\t\t<button class='btn' ng-click='createTutorial(name)' type='button'>Create tutorial</button>\n\t</div>\n</form>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid' ng-controller='TutorialCtrl'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' ng-click='createTutorial(name)' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr ng-repeat='tutorial in tutorials'>\n\t\t\t\t\t\t\t\t<td><a href=''>{{tutorial.name}}</a></td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.steps.length}} steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\n\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep = Math.max(this.currentStep - 1, 0)\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep = Math.min(this.currentStep + 1, this.steps.length - 1)\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n})\n\n\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t\t<script>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\n\tdescribe('tutorial class', function() {\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\t\t\t\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t})\n})\n\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n\n\t\t</script>\n\t</body>\n</html>",
"<h3>Form Validation</h3>",
"<h3>Form Validation</h3>\n\n<form name='form'>\n\t<div class='control-group'>\n\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' type='text' />\n\t\t<button class='btn' ng-click='createTutorial(name)' type='button'>Create tutorial</button>\n\t</div>\n</form>",
"<h3>Form Validation</h3>\n\n<form name='form'>\n\t<div class='control-group'>\n\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' required type='text' />\n\t\t<button class='btn' ng-click='createTutorial(name)' type='button'>Create tutorial</button>\n\t</div>\n</form>",
"<h3>Form Validation</h3>\n\n<form name='form'>\n\t<div class='control-group'>\n\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' required type='text' />\n\t\t<button class='btn' ng-click='createTutorial(name)' ng-disabled='form.$invalid' type='button'>Create tutorial</button>\n\t</div>\n</form>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid' ng-controller='TutorialCtrl'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' required type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' ng-click='createTutorial(name)' ng-disabled='form.$invalid' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr ng-repeat='tutorial in tutorials'>\n\t\t\t\t\t\t\t\t<td><a href=''>{{tutorial.name}}</a></td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.steps.length}} steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<textarea></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\n\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep = Math.max(this.currentStep - 1, 0)\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep = Math.min(this.currentStep + 1, this.steps.length - 1)\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n})\n\n\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t\t<script>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\n\tdescribe('tutorial class', function() {\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\t\t\t\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t})\n})\n\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n\n\t\t</script>\n\t</body>\n</html>",
"<h3>That was easy.</h3>",
"<h3>That was easy.</h3>\n\n<h4>Even easier: using Angular.js Components</h4>\n\n<textarea></textarea>",
"<h3>That was easy.</h3>\n\n<h4>Even easier: using Angular.js Components</h4>\n\n<textarea ng-model='tutorials[0].steps[0]'></textarea>",
"<h3>That was easy.</h3>\n\n<h4>Even easier: using Angular.js Components</h4>\n\n<textarea ng-model='tutorials[0].steps[0]' ui-codemirror></textarea>",
"<h3>That was easy.</h3>\n\n<h4>Even easier: using Angular.js Components</h4>\n\n<textarea ng-model='tutorials[0].steps[0]' ui-codemirror='{lineNumbers: true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\n<p>Here's some optional configuration, so we can get HTML syntax highlighting, among a few other nice things.</p>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid' ng-controller='TutorialCtrl'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' required type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' ng-click='createTutorial(name)' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr ng-repeat='tutorial in tutorials'>\n\t\t\t\t\t\t\t\t<td><a href=''>{{tutorial.name}}</a></td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.steps.length}} steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<textarea ng-model='tutorials[0].steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\n\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep = Math.max(this.currentStep - 1, 0)\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep = Math.min(this.currentStep + 1, this.steps.length - 1)\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n})\n\n\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t\t<script>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\n\tdescribe('tutorial class', function() {\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\t\t\t\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t})\n})\n\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n\n\t\t</script>\n\t</body>\n</html>",
"<h3>Components are a powerful feature that lets you write modular reusable code</h3>",
"<h3>Components are a powerful feature that lets you write modular reusable code</h3>\n\n<p>Let's refactor some of our code into a component.</p>\n\n\n\n\n\n<form>\n\t<div class='control-group'>\n\t\t<textarea ng-model='tutorials[0].steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t</div>\n\t\n\t<div class='control-group'>\n\t\tStep 0 of 0\n\t\t\n\t\t<button class='btn' type='button'>&lt;</button>\n\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\n\t\t<button class='btn' type='button'>Add step</button>\n\t</div>\n</form>\n",
"<h3>Components are a powerful feature that lets you write modular reusable code</h3>\n\n<p>Let's refactor some of our code into a component.</p>\n\n\n\n<script type='text/ng-template' id='codeplayer.html'>\n\n<form>\n\t<div class='control-group'>\n\t\t<textarea ng-model='tutorials[0].steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t</div>\n\t\n\t<div class='control-group'>\n\t\tStep 0 of 0\n\t\t\n\t\t<button class='btn' type='button'>&lt;</button>\n\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\n\t\t<button class='btn' type='button'>Add step</button>\n\t</div>\n</form>\n\n</script>\n\n",
"<h3>Components are a powerful feature that lets you write modular reusable code</h3>\n\n<p>Let's refactor some of our code into a component.</p>\n\n\n\n<script type='text/ng-template' id='codeplayer.html'>\n\n\t<form>\n\t\t<div class='control-group'>\n\t\t\t<textarea ng-model='tutorials[0].steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t\t</div>\n\t\t\n\t\t<div class='control-group'>\n\t\t\tStep 0 of 0\n\t\t\t\n\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\n\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t</div>\n\t</form>\n\n</script>\n\n",
"<h3>Components are a powerful feature that lets you write modular reusable code</h3>\n\n<p>Let's refactor some of our code into a component.</p>\n\n<code-player></code-player>\n\n<script type='text/ng-template' id='codeplayer.html'>\n\n\t<form>\n\t\t<div class='control-group'>\n\t\t\t<textarea ng-model='tutorials[0].steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t\t</div>\n\t\t\n\t\t<div class='control-group'>\n\t\t\tStep 0 of 0\n\t\t\t\n\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\n\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t</div>\n\t</form>\n\n</script>\n\n",
"<h3>Components are a powerful feature that lets you write modular reusable code</h3>\n\n<p>Let's refactor some of our code into a component.</p>\n\n<code-player></code-player>\n\n<script type='text/ng-template' id='codeplayer.html'>\n\n\t<form>\n\t\t<div class='control-group'>\n\t\t\t<textarea ng-model='tutorials[0].steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t\t</div>\n\t\t\n\t\t<div class='control-group'>\n\t\t\tStep 0 of 0\n\t\t\t\n\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\n\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t</div>\n\t</form>\n\n</script>\n\n<script type='demo'>\n\nangular.module('tutorial').directive('codePlayer', function() {\n\t\n})\n\n</script>",
"<h3>Components are a powerful feature that lets you write modular reusable code</h3>\n\n<p>Let's refactor some of our code into a component.</p>\n\n<code-player></code-player>\n\n<script type='text/ng-template' id='codeplayer.html'>\n\n\t<form>\n\t\t<div class='control-group'>\n\t\t\t<textarea ng-model='tutorials[0].steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t\t</div>\n\t\t\n\t\t<div class='control-group'>\n\t\t\tStep 0 of 0\n\t\t\t\n\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\n\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t</div>\n\t</form>\n\n</script>\n\n<script type='demo'>\n\nangular.module('tutorial').directive('codePlayer', function() {\n\treturn {\n\t\ttemplateUrl: 'codeplayer.html',\n\t}\n})\n\n</script>",
"<h3>Components are a powerful feature that lets you write modular reusable code</h3>\n\n<p>Let's refactor some of our code into a component.</p>\n\n<code-player></code-player>\n\n<script type='text/ng-template' id='codeplayer.html'>\n\n\t<form>\n\t\t<div class='control-group'>\n\t\t\t<textarea ng-model='tutorials[0].steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t\t</div>\n\t\t\n\t\t<div class='control-group'>\n\t\t\tStep 0 of 0\n\t\t\t\n\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\n\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t</div>\n\t</form>\n\n</script>\n\n<script type='demo'>\n\nangular.module('tutorial').directive('codePlayer', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'codeplayer.html',\n\t}\n})\n\n</script>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid' ng-controller='TutorialCtrl'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' required type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' ng-click='createTutorial(name)' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr ng-repeat='tutorial in tutorials'>\n\t\t\t\t\t\t\t\t<td><a href=''>{{tutorial.name}}</a></td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.steps.length}} steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t<code-player tutorial=\"tutorials[0]\"></code-player>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t<script type='text/ng-template' id='codeplayer.html'>\n\t\t\t\n\t\t\t\t<form>\n\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t<textarea ng-model='tutorial.steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\tStep 0 of 0\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button class='btn' type='button'>&lt;</button>\n\t\t\t\t\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button class='btn' type='button'>Add step</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\n\t\t\t</script>\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\n\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep = Math.max(this.currentStep - 1, 0)\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep = Math.min(this.currentStep + 1, this.steps.length - 1)\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n})\n\n\n\nangular.module('tutorial').directive('codePlayer', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'codeplayer.html',\n\t\tscope: {\n\t\t\ttutorial: '='\n\t\t}\n\t}\n})\n\n\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t\t<script>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\n\tdescribe('tutorial class', function() {\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\t\t\t\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t})\n})\n\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n\n\t\t</script>\n\t</body>\n</html>",
"<h3>Normally, you should have one file for each controller, one file for each directive and one file for each template.</h3>\n\n<p>Some tools, like <a href='http://yeoman.io/'>Yeoman</a> create an appropriate directory structure for you</p>",
"<h3>Now that we have an isolated component, we can work on it without worrying about breaking the rest of the app</h3>\n\n",
"<h3>Now that we have an isolated component, we can work on it without worrying about breaking the rest of the app</h3>\n\n<form>\n\t<div class='control-group'>\n\t\t<textarea ng-model='tutorial.steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t</div>\n\t\n\t<div class='control-group'>\n\t\tStep 0 of 0\n\t\t\n\t\t<button class='btn' type='button'>&lt;</button>\n\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\n\t\t<button class='btn' type='button'>Add step</button>\n\t</div>\n</form>",
"<h3>Now that we have an isolated component, we can work on it without worrying about breaking the rest of the app</h3>\n\n<form>\n\t<div class='control-group'>\n\t\t<textarea ng-model='tutorial.steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t</div>\n\t\n\t<div class='control-group'>\n\t\tStep {{tutorial.currentStep + 1}} of 0\n\t\t\n\t\t<button class='btn' type='button'>&lt;</button>\n\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\n\t\t<button class='btn' type='button'>Add step</button>\n\t</div>\n</form>",
"<h3>Now that we have an isolated component, we can work on it without worrying about breaking the rest of the app</h3>\n\n<form>\n\t<div class='control-group'>\n\t\t<textarea ng-model='tutorial.steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t</div>\n\t\n\t<div class='control-group'>\n\t\tStep {{tutorial.currentStep + 1}} of {{tutorial.steps.length}}\n\t\t\n\t\t<button class='btn' type='button'>&lt;</button>\n\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\n\t\t<button class='btn' type='button'>Add step</button>\n\t</div>\n</form>",
"<h3>Now that we have an isolated component, we can work on it without worrying about breaking the rest of the app</h3>\n\n<form>\n\t<div class='control-group'>\n\t\t<textarea ng-model='tutorial.steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t</div>\n\t\n\t<div class='control-group'>\n\t\tStep {{tutorial.currentStep + 1}} of {{tutorial.steps.length}}\n\t\t\n\t\t<button class='btn' ng-click='tutorial.prevStep()' type='button'>&lt;</button>\n\t\t<button class='btn' type='button'>&gt;</button>\n\t\t\n\t\t<button class='btn' type='button'>Add step</button>\n\t</div>\n</form>",
"<h3>Now that we have an isolated component, we can work on it without worrying about breaking the rest of the app</h3>\n\n<form>\n\t<div class='control-group'>\n\t\t<textarea ng-model='tutorial.steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t</div>\n\t\n\t<div class='control-group'>\n\t\tStep {{tutorial.currentStep + 1}} of {{tutorial.steps.length}}\n\t\t\n\t\t<button class='btn' ng-click='tutorial.prevStep()' type='button'>&lt;</button>\n\t\t<button class='btn' ng-click='tutorial.nextStep()' type='button'>&gt;</button>\n\t\t\n\t\t<button class='btn' type='button'>Add step</button>\n\t</div>\n</form>",
"<h3>Now that we have an isolated component, we can work on it without worrying about breaking the rest of the app</h3>\n\n<form>\n\t<div class='control-group'>\n\t\t<textarea ng-model='tutorial.steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t</div>\n\t\n\t<div class='control-group'>\n\t\tStep {{tutorial.currentStep + 1}} of {{tutorial.steps.length}}\n\t\t\n\t\t<button class='btn' ng-click='tutorial.prevStep()' type='button'>&lt;</button>\n\t\t<button class='btn' ng-click='tutorial.nextStep()' type='button'>&gt;</button>\n\t\t\n\t\t<button class='btn' ng-click='tutorial.addStep()' ng-show='tutorial.currentStep == tutorial.steps.length - 1' type='button'>Add step</button>\n\t</div>\n</form>",
"<h3>Now that we have an isolated component, we can work on it without worrying about breaking the rest of the app</h3>\n\n<form>\n\t<div class='control-group'>\n\t\t<textarea ng-model='tutorial.steps[0]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t</div>\n\t\n\t<div class='control-group'>\n\t\tStep {{tutorial.currentStep + 1}} of {{tutorial.steps.length}}\n\t\t\n\t\t<button class='btn' ng-click='tutorial.prevStep()' type='button'>&lt;</button>\n\t\t<button class='btn' ng-click='tutorial.nextStep()' type='button'>&gt;</button>\n\t\t\n\t\t<button class='btn' ng-click='tutorial.addStep()' ng-show='tutorial.currentStep == tutorial.steps.length - 1' type='button'>Add step</button>\n\t</div>\n</form>",
"<h3>Now that we have an isolated component, we can work on it without worrying about breaking the rest of the app</h3>\n\n<form>\n\t<div class='control-group'>\n\t\t<textarea ng-model='tutorial.steps[tutorial.currentStep]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t</div>\n\t\n\t<div class='control-group'>\n\t\tStep {{tutorial.currentStep + 1}} of {{tutorial.steps.length}}\n\t\t\n\t\t<button class='btn' ng-click='tutorial.prevStep()' type='button'>&lt;</button>\n\t\t<button class='btn' ng-click='tutorial.nextStep()' type='button'>&gt;</button>\n\t\t\n\t\t<button class='btn' ng-click='tutorial.addStep()' ng-show='tutorial.currentStep == tutorial.steps.length - 1' type='button'>Add step</button>\n\t</div>\n</form>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid' ng-controller='TutorialCtrl'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' required type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' ng-click='createTutorial(name)' ng-disabled='form.$invalid' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr ng-repeat='tutorial in tutorials'>\n\t\t\t\t\t\t\t\t<td><a href=''>{{tutorial.name}}</a></td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.steps.length}} steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<code-player tutorial=\"tutorials[0]\"></code-player>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<script type='text/ng-template' id='codeplayer.html'>\n\t\t\t\n\t\t\t\t<form>\n\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t<textarea ng-model='tutorial.steps[tutorial.currentStep]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\tStep {{tutorial.currentStep + 1}} of {{tutorial.steps.length}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button class='btn' ng-click='tutorial.prevStep()' type='button'>&lt;</button>\n\t\t\t\t\t\t<button class='btn' ng-click='tutorial.nextStep()' type='button'>&gt;</button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button class='btn' ng-click='tutorial.addStep()' ng-show='tutorial.currentStep == tutorial.steps.length - 1' type='button'>Add step</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\n\t\t\t</script>\n\t\t\t\t\t\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\n\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep = Math.max(this.currentStep - 1, 0)\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep = Math.min(this.currentStep + 1, this.steps.length - 1)\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n})\n\n\n\nangular.module('tutorial').directive('codePlayer', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'codeplayer.html',\n\t\tscope: {\n\t\t\ttutorial: '='\n\t\t}\n\t}\n})\n\n\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t\t<script>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\n\tdescribe('tutorial class', function() {\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\t\t\t\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t})\n})\n\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n\n\t\t</script>\n\t</body>\n</html>",
"<h3>Let's make it so that we can select a tutorial from the table, and show it on the code player</h3>\n\n<table class='table table-condensed'>\n\t<tr>\n\t\t<th>Tutorial Name</th>\n\t\t<th>Created</th>\n\t\t<th>Length</th>\n\t</tr>\n\t<tr ng-repeat='tutorial in tutorials'>\n\t\t<td><a href=''>{{tutorial.name}}</a></td>\n\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t<td>{{tutorial.steps.length}} steps</td>\n\t</tr>\n</table>\n\n<code-player tutorial=\"tutorials[0]\"></code-player>\n\n\n\n<script type='demo'>\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n})\n\n</script>",
"<h3>Let's make it so that we can select a tutorial from the table, and show it on the code player</h3>\n\n<table class='table table-condensed'>\n\t<tr>\n\t\t<th>Tutorial Name</th>\n\t\t<th>Created</th>\n\t\t<th>Length</th>\n\t</tr>\n\t<tr ng-repeat='tutorial in tutorials'>\n\t\t<td><a ng-click='setCurrentTutorial($index)' href=''>{{tutorial.name}}</a></td>\n\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t<td>{{tutorial.steps.length}} steps</td>\n\t</tr>\n</table>\n\n<code-player tutorial=\"tutorials[0]\"></code-player>\n\n\n\n<script type='demo'>\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n})\n\n</script>",
"<h3>Let's make it so that we can select a tutorial from the table, and show it on the code player</h3>\n\n<table class='table table-condensed'>\n\t<tr>\n\t\t<th>Tutorial Name</th>\n\t\t<th>Created</th>\n\t\t<th>Length</th>\n\t</tr>\n\t<tr ng-repeat='tutorial in tutorials'>\n\t\t<td><a ng-click='setCurrentTutorial($index)' href=''>{{tutorial.name}}</a></td>\n\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t<td>{{tutorial.steps.length}} steps</td>\n\t</tr>\n</table>\n\n<code-player tutorial=\"tutorials[0]\"></code-player>\n\n\n\n<script type='demo'>\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n\t\n\t$scope.currentTutorial = 0\n\t\n\t$scope.setCurrentTutorial = function(index) {\n\t\t$scope.currentTutorial = index\n\t}\n})\n\n</script>",
"<h3>Let's make it so that we can select a tutorial from the table, and show it on the code player</h3>\n\n<table class='table table-condensed'>\n\t<tr>\n\t\t<th>Tutorial Name</th>\n\t\t<th>Created</th>\n\t\t<th>Length</th>\n\t</tr>\n\t<tr ng-repeat='tutorial in tutorials' ng-class='{success: tutorial == tutorials[currentTutorial]}'>\n\t\t<td><a ng-click='setCurrentTutorial($index)' href=''>{{tutorial.name}}</a></td>\n\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t<td>{{tutorial.steps.length}} steps</td>\n\t</tr>\n</table>\n\n<code-player tutorial=\"tutorials[0]\"></code-player>\n\n\n\n<script type='demo'>\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n\t\n\t$scope.currentTutorial = 0\n\t\n\t$scope.setCurrentTutorial = function(index) {\n\t\t$scope.currentTutorial = index\n\t}\n})\n\n</script>",
"<h3>Let's make it so that we can select a tutorial from the table, and show it on the code player</h3>\n\n<table class='table table-condensed'>\n\t<tr>\n\t\t<th>Tutorial Name</th>\n\t\t<th>Created</th>\n\t\t<th>Length</th>\n\t</tr>\n\t<tr ng-repeat='tutorial in tutorials' ng-class='{success: tutorial == tutorials[currentTutorial]}'>\n\t\t<td><a ng-click='setCurrentTutorial($index)' href=''>{{tutorial.name}}</a></td>\n\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t<td>{{tutorial.steps.length}} steps</td>\n\t</tr>\n</table>\n\n<code-player tutorial=\"tutorials[currentTutorial]\"></code-player>\n\n\n\n<script type='demo'>\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n\t\n\t$scope.currentTutorial = 0\n\t\n\t$scope.setCurrentTutorial = function(index) {\n\t\t$scope.currentTutorial = index\n\t}\n})\n\n</script>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid' ng-controller='TutorialCtrl'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' required type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' ng-click='createTutorial(name)' ng-disabled='form.$invalid' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr ng-repeat='tutorial in tutorials' ng-class='{success: tutorial == tutorials[currentTutorial]}'>\n\t\t\t\t\t\t\t\t<td><a ng-click='setCurrentTutorial($index)' href=''>{{tutorial.name}}</a></td>\n\t\t\t\t\t\t\t\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.steps.length}} steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<code-player tutorial=\"tutorials[currentTutorial]\"></code-player>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<script type='text/ng-template' id='codeplayer.html'>\n\t\t\t\n\t\t\t\t<form>\n\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t<textarea ng-model='tutorial.steps[tutorial.currentStep]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\tStep {{tutorial.currentStep + 1}} of {{tutorial.steps.length}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button class='btn' ng-click='tutorial.prevStep()' type='button'>&lt;</button>\n\t\t\t\t\t\t<button class='btn' ng-click='tutorial.nextStep()' type='button'>&gt;</button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button class='btn' ng-click='tutorial.addStep()' ng-show='tutorial.currentStep == tutorial.steps.length - 1' type='button'>Add step</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\n\t\t\t</script>\n\t\t\t\t\t\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\n\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep = Math.max(this.currentStep - 1, 0)\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep = Math.min(this.currentStep + 1, this.steps.length - 1)\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n\t\n\t$scope.currentTutorial = 0\n\t\n\t$scope.setCurrentTutorial = function(index) {\n\t\t$scope.currentTutorial = index\n\t}\n})\n\n\n\nangular.module('tutorial').directive('codePlayer', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'codeplayer.html',\n\t\tscope: {\n\t\t\ttutorial: '='\n\t\t}\n\t}\n})\n\n\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t\t<script>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\n\tdescribe('tutorial class', function() {\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\t\t\t\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t})\n})\n\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n\n\t\t</script>\n\t</body>\n</html>",
"<h3>Integrating to the DOM, jQuery and 3rd party libraries</h3>\n\n<p>The directive feature that we used for making components can also be used to integrate to non-Angular stuff.</p>\n",
"<h3>Integrating to the DOM, jQuery and 3rd party libraries</h3>\n\n<p>The directive feature that we used for making components can also be used to integrate to non-Angular stuff.</p>\n\n<p>Let's build the right panel.</p>\n\n\n\n\n\n<iframe frameborder='0' style='height:730px;width:100%;'></iframe>",
"<h3>Integrating to the DOM, jQuery and 3rd party libraries</h3>\n\n<p>The directive feature that we used for making components can also be used to integrate to non-Angular stuff.</p>\n\n<p>Let's build the right panel.</p>\n\n\n\n<script type='text/ng-template' id='coderunner.html'>\n\n<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\n</script>",
"<h3>Integrating to the DOM, jQuery and 3rd party libraries</h3>\n\n<p>The directive feature that we used for making components can also be used to integrate to non-Angular stuff.</p>\n\n<p>Let's build the right panel.</p>\n\n\n\n<script type='text/ng-template' id='coderunner.html'>\n\n\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\n</script>",
"<h3>Integrating to the DOM, jQuery and 3rd party libraries</h3>\n\n<p>The directive feature that we used for making components can also be used to integrate to non-Angular stuff.</p>\n\n<p>Let's build the right panel.</p>\n\n<code-runner></code-runner>\n\n<script type='text/ng-template' id='coderunner.html'>\n\n\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\n</script>",
"<h3>Integrating to the DOM, jQuery and 3rd party libraries</h3>\n\n<p>The directive feature that we used for making components can also be used to integrate to non-Angular stuff.</p>\n\n<p>Let's build the right panel.</p>\n\n<code-runner></code-runner>\n\n<script type='text/ng-template' id='coderunner.html'>\n\n\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\n</script>\n\n<script type='demo'>\n\t\nangular.module('tutorial').directive('codeRunner', function() {\n\t\n})\n\n</script>",
"<h3>Integrating to the DOM, jQuery and 3rd party libraries</h3>\n\n<p>The directive feature that we used for making components can also be used to integrate to non-Angular stuff.</p>\n\n<p>Let's build the right panel.</p>\n\n<code-runner></code-runner>\n\n<script type='text/ng-template' id='coderunner.html'>\n\n\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\n</script>\n\n<script type='demo'>\n\t\nangular.module('tutorial').directive('codeRunner', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'coderunner.html',\n\t\treplace: true,\n\t\tscope: {\n\t\t\ttutorial: '='\n\t\t}\n\t}\n})\n\n</script>",
"<h3>Integrating to the DOM, jQuery and 3rd party libraries</h3>\n\n<p>The directive feature that we used for making components can also be used to integrate to non-Angular stuff.</p>\n\n<p>Let's build the right panel.</p>\n\n<code-runner tutorial=\"tutorials[currentTutorial]\"></code-runner>\n\n<script type='text/ng-template' id='coderunner.html'>\n\n\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\n</script>\n\n<script type='demo'>\n\t\nangular.module('tutorial').directive('codeRunner', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'coderunner.html',\n\t\treplace: true,\n\t\tscope: {\n\t\t\ttutorial: '='\n\t\t}\n\t}\n})\n\n</script>",
"<h3>Integrating to the DOM, jQuery and 3rd party libraries</h3>\n\n<p>The directive feature that we used for making components can also be used to integrate to non-Angular stuff.</p>\n\n<p>Let's build the right panel.</p>\n\n<code-runner tutorial=\"tutorials[currentTutorial]\"></code-runner>\n\n<script type='text/ng-template' id='coderunner.html'>\n\n\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\n</script>\n\n<script type='demo'>\n\t\nangular.module('tutorial').directive('codeRunner', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'coderunner.html',\n\t\treplace: true,\n\t\tscope: {\n\t\t\ttutorial: '='\n\t\t},\n\t\tlink: function($scope, element) {\n\t\t\t\n\t\t}\n\t}\n})\n\n</script>",
"<h3>Integrating to the DOM, jQuery and 3rd party libraries</h3>\n\n<p>The directive feature that we used for making components can also be used to integrate to non-Angular stuff.</p>\n\n<p>Let's build the right panel.</p>\n\n<code-runner tutorial=\"tutorials[currentTutorial]\"></code-runner>\n\n<script type='text/ng-template' id='coderunner.html'>\n\n\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\n</script>\n\n<script type='demo'>\n\t\nangular.module('tutorial').directive('codeRunner', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'coderunner.html',\n\t\treplace: true,\n\t\tscope: {\n\t\t\ttutorial: '='\n\t\t},\n\t\tlink: function($scope, element) {\n\t\t\t\n\t\t\t$scope.$watch('tutorial', function(tutorial) {\n\t\t\t\t\n\t\t\t}, true)\n\t\t\t\n\t\t}\n\t}\n})\n\n</script>",
"<h3>Integrating to the DOM, jQuery and 3rd party libraries</h3>\n\n<p>The directive feature that we used for making components can also be used to integrate to non-Angular stuff.</p>\n\n<p>Let's build the right panel.</p>\n\n<code-runner tutorial=\"tutorials[currentTutorial]\"></code-runner>\n\n<script type='text/ng-template' id='coderunner.html'>\n\n\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\n</script>\n\n<script type='demo'>\n\t\nangular.module('tutorial').directive('codeRunner', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'coderunner.html',\n\t\treplace: true,\n\t\tscope: {\n\t\t\ttutorial: '='\n\t\t},\n\t\tlink: function($scope, element) {\n\t\t\t\n\t\t\t$scope.$watch('tutorial', function(tutorial) {\n\t\t\t\t\n\t\t\t\tif (tutorial) {\n\t\t\t\t\tvar doc = element[0].contentWindow.document\n\t\t\t\t\tdoc.open()\n\t\t\t\t\tdoc.write(tutorial.steps[tutorial.currentStep])\n\t\t\t\t\tdoc.close()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}, true)\n\t\t\t\n\t\t}\n\t}\n})\n\n</script>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid' ng-controller='TutorialCtrl'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' required type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' ng-click='createTutorial(name)' ng-disabled='form.$invalid' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr ng-repeat='tutorial in tutorials' ng-class='{success: tutorial == tutorials[currentTutorial]}'>\n\t\t\t\t\t\t\t\t<td><a ng-click='setCurrentTutorial($index)' href=''>{{tutorial.name}}</a></td>\n\t\t\t\t\t\t\t\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.steps.length}} steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<code-player tutorial=\"tutorials[currentTutorial]\"></code-player>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t<code-runner tutorial=\"tutorials[currentTutorial]\"></code-runner>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t<script type='text/ng-template' id='codeplayer.html'>\n\t\t\t\n\t\t\t\t<form>\n\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t<textarea ng-model='tutorial.steps[tutorial.currentStep]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\tStep {{tutorial.currentStep + 1}} of {{tutorial.steps.length}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button class='btn' ng-click='tutorial.prevStep()' type='button'>&lt;</button>\n\t\t\t\t\t\t<button class='btn' ng-click='tutorial.nextStep()' type='button'>&gt;</button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button class='btn' ng-click='tutorial.addStep()' ng-show='tutorial.currentStep == tutorial.steps.length - 1' type='button'>Add step</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\n\t\t\t</script>\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t<script type='text/ng-template' id='coderunner.html'>\n\n\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\n\t\t\t</script>\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\n\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep = Math.max(this.currentStep - 1, 0)\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep = Math.min(this.currentStep + 1, this.steps.length - 1)\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n\t\n\t$scope.currentTutorial = 0\n\t\n\t$scope.setCurrentTutorial = function(index) {\n\t\t$scope.currentTutorial = index\n\t}\n})\n\n\n\nangular.module('tutorial').directive('codePlayer', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'codeplayer.html',\n\t\tscope: {\n\t\t\ttutorial: '='\n\t\t}\n\t}\n})\n\n\n\nangular.module('tutorial').directive('codeRunner', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'coderunner.html',\n\t\treplace: true,\n\t\tscope: {\n\t\t\ttutorial: '='\n\t\t},\n\t\tlink: function($scope, element) {\n\t\t\t\n\t\t\t$scope.$watch('tutorial', function(tutorial) {\n\t\t\t\t\n\t\t\t\tif (tutorial) {\n\t\t\t\t\tvar doc = element[0].contentWindow.document\n\t\t\t\t\tdoc.open()\n\t\t\t\t\tdoc.write(tutorial.steps[tutorial.currentStep])\n\t\t\t\t\tdoc.close()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}, true)\n\t\t\t\n\t\t}\n\t}\n})\n\n\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t\t<script>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\n\tdescribe('tutorial class', function() {\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\t\t\t\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t})\n})\n\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n\n\t\t</script>\n\t</body>\n</html>",
"<h3>Just for fun, let's load this tutorial in our app.</h3>\n",
"<h3>Just for fun, let's load this tutorial in our app.</h3>\n\n<script type='demo'>\n\t\nangular.module('tutorial').controller('TutorialCtrl', function($scope, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n\t\n\t$scope.currentTutorial = 0\n\t\n\t$scope.setCurrentTutorial = function(index) {\n\t\t$scope.currentTutorial = index\n\t}\n})\n\n</script>",
"<h3>Just for fun, let's load this tutorial in our app.</h3>\n\n<script type='demo'>\n\t\nangular.module('tutorial').controller('TutorialCtrl', function($scope, $http, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n\t\n\t$scope.currentTutorial = 0\n\t\n\t$scope.setCurrentTutorial = function(index) {\n\t\t$scope.currentTutorial = index\n\t}\n})\n\n</script>",
"<h3>Just for fun, let's load this tutorial in our app.</h3>\n\n<script type='demo'>\n\t\nangular.module('tutorial').controller('TutorialCtrl', function($scope, $http, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t\n\t\n\t$http.get('presentation.json').success(function(data) {\n\t\t\n\t})\n\t\n\t\n\t\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n\t\n\t$scope.currentTutorial = 0\n\t\n\t$scope.setCurrentTutorial = function(index) {\n\t\t$scope.currentTutorial = index\n\t}\n})\n\n</script>",
"<h3>Just for fun, let's load this tutorial in our app.</h3>\n\n<script type='demo'>\n\t\nangular.module('tutorial').controller('TutorialCtrl', function($scope, $http, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t\n\t\n\t$http.get('presentation.json').success(function(data) {\n\t\tvar tutorial = new Tutorial({name: 'Angular Tutorial', steps: data})\n\t\t$scope.tutorials.push(tutorial)\n\t})\n\t\n\t\n\t\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n\t\n\t$scope.currentTutorial = 0\n\t\n\t$scope.setCurrentTutorial = function(index) {\n\t\t$scope.currentTutorial = index\n\t}\n})\n\n</script>",
"<!doctype html>\n<html>\n\t<head>\n\t\t<title></title>\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css' rel='stylesheet' />\n\t\t<link href='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.css' rel='stylesheet' />\n\t\t<style>.CodeMirror {height:580px;}</style>\n\t</head>\n\t<body>\n\t\t<div id='tutorial'>\n\t\t\t<div class='container-fluid page-header'>\n\t\t\t\t<div class='form-inline row-fluid' ng-controller='TutorialCtrl'>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t<form name='form'>\n\t\t\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t\t\t<input class='input-small' placeholder='Tutorial Name' ng-model='name' required type='text' />\n\t\t\t\t\t\t\t\t<button class='btn' ng-click='createTutorial(name)' ng-disabled='form.$invalid' type='button'>Create tutorial</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\n\t\t\t\t\t\t<table class='table table-condensed'>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Tutorial Name</th>\n\t\t\t\t\t\t\t\t<th>Created</th>\n\t\t\t\t\t\t\t\t<th>Length</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr ng-repeat='tutorial in tutorials' ng-class='{success: tutorial == tutorials[currentTutorial]}'>\n\t\t\t\t\t\t\t\t<td><a ng-click='setCurrentTutorial($index)' href=''>{{tutorial.name}}</a></td>\n\t\t\t\t\t\t\t\t\t<td>{{tutorial.date | date: 'MMM d, yyyy'}}</td>\n\t\t\t\t\t\t\t\t<td>{{tutorial.steps.length}} steps</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\n\t\t\t\t\t\t<code-player tutorial=\"tutorials[currentTutorial]\"></code-player>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='span6'>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t<code-runner tutorial=\"tutorials[currentTutorial]\"></code-runner>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t<script type='text/ng-template' id='codeplayer.html'>\n\t\t\t\n\t\t\t\t<form>\n\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\t<textarea ng-model='tutorial.steps[tutorial.currentStep]' ui-codemirror='{lineNumbers:true, lineWrapping: true, tabSize: 2, mode: \"text/html\"}'></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class='control-group'>\n\t\t\t\t\t\tStep {{tutorial.currentStep + 1}} of {{tutorial.steps.length}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button class='btn' ng-click='tutorial.prevStep()' type='button'>&lt;</button>\n\t\t\t\t\t\t<button class='btn' ng-click='tutorial.nextStep()' type='button'>&gt;</button>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<button class='btn' ng-click='tutorial.addStep()' ng-show='tutorial.currentStep == tutorial.steps.length - 1' type='button'>Add step</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\n\t\t\t</script>\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t<script type='text/ng-template' id='coderunner.html'>\n\n\t\t\t\t<iframe frameborder='0' style='height:730px;width:100%;'></iframe>\n\t\t\t\n\t\t\t</script>\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t</div>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.5/angular.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/3.12.0/codemirror.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/xml.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/javascript.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/css.min.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/htmlmixed.min.js'></script>\n\t\t<script>\nangular.module('tutorial', ['ui.directives'])\n\n\n\nangular.module('tutorial').factory('Tutorial', function() {\n\tfunction Tutorial(args) {\n\t\tthis.name = args.name\n\t\tthis.date = args.date || new Date\n\t\tthis.steps = args.steps || ['']\n\t\tthis.currentStep = 0\n\t}\n\t\n\tTutorial.prototype.prevStep = function() {\n\t\tthis.currentStep = Math.max(this.currentStep - 1, 0)\n\t}\n\tTutorial.prototype.nextStep = function() {\n\t\tthis.currentStep = Math.min(this.currentStep + 1, this.steps.length - 1)\n\t}\n\t\n\tTutorial.prototype.addStep = function() {\n\t\tvar step = this.steps[this.currentStep]\n\t\tthis.steps.splice(this.currentStep, 0, step)\n\t\tthis.nextStep()\n\t}\n\t\n\treturn Tutorial\n})\n\n\n\nangular.module('tutorial').controller('TutorialCtrl', function($scope, $http, Tutorial) {\n\t\n\t$scope.tutorials = [new Tutorial({name: 'test', steps: ['hello world']})]\n\t\n\t\n\t\n\t$http.get('presentation.json').success(function(data) {\n\t\tvar tutorial = new Tutorial({name: 'Angular Tutorial', steps: data})\n\t\t$scope.tutorials.push(tutorial)\n\t})\n\t\n\t\n\t\n\t\n\t$scope.createTutorial = function(name) {\n\t\t$scope.tutorials.push(new Tutorial({name: name}))\n\t\t\n\t\t$scope.name = ''\n\t}\n\t\n\t$scope.currentTutorial = 0\n\t\n\t$scope.setCurrentTutorial = function(index) {\n\t\t$scope.currentTutorial = index\n\t}\n})\n\n\n\nangular.module('tutorial').directive('codePlayer', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'codeplayer.html',\n\t\tscope: {\n\t\t\ttutorial: '='\n\t\t}\n\t}\n})\n\n\n\nangular.module('tutorial').directive('codeRunner', function() {\n\treturn {\n\t\trestrict: 'E',\n\t\ttemplateUrl: 'coderunner.html',\n\t\treplace: true,\n\t\tscope: {\n\t\t\ttutorial: '='\n\t\t},\n\t\tlink: function($scope, element) {\n\t\t\t\n\t\t\t$scope.$watch('tutorial', function(tutorial) {\n\t\t\t\t\n\t\t\t\tif (tutorial) {\n\t\t\t\t\tvar doc = element[0].contentWindow.document\n\t\t\t\t\tdoc.open()\n\t\t\t\t\tdoc.write(tutorial.steps[tutorial.currentStep])\n\t\t\t\t\tdoc.close()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}, true)\n\t\t\t\n\t\t}\n\t}\n})\n\n\n\nwindow.onload = function() {\n\tangular.bootstrap(document.getElementById('tutorial'), ['tutorial'])\n}\n\t\t</script>\n\t\t\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/jasmine/1.3.1/jasmine.js'></script>\n\t\t<script src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.1.1/angular-mocks.js'></script>\n\t\t<script src='https://raw.github.com/larrymyers/jasmine-reporters/master/src/jasmine.console_reporter.js'></script>\n\t\t<script>\ndescribe('tutorial app', function() {\n\tbeforeEach(module('tutorial'))\n\n\tdescribe('tutorial class', function() {\n\t\tit('should step back and forth', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['a', 'b']})\n\t\t\t\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\ttutorial.nextStep()\n\t\t\texpect(tutorial.currentStep).toEqual(1)\n\t\t\t\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t\ttutorial.prevStep()\n\t\t\texpect(tutorial.currentStep).toEqual(0)\n\t\t}))\n\t\t\n\t\tit('should add steps', inject(function(Tutorial) {\n\t\t\tvar tutorial = new Tutorial({name: 'test', steps: ['hello', 'world']})\n\t\t\t\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(1)\n\t\t\texpect(tutorial.steps[1]).toEqual('hello')\n\t\t\t\n\t\t\ttutorial.steps[1] = 'nice'\n\t\t\ttutorial.addStep()\n\t\t\texpect(tutorial.currentStep).toBe(2)\n\t\t\texpect(tutorial.steps).toEqual(['hello', 'nice', 'nice', 'world'])\n\t\t}))\n\t})\n})\n\nconsole = top.console\n\nvar env = jasmine.getEnv()\nenv.addReporter(new jasmine.ConsoleReporter())\nenv.execute()\n\n\t\t</script>\n\t</body>\n</html>"
]